{"ast":null,"code":"const formatDateForDisplay = date => {\n  const dt = new Date(date);\n  return `${dt.getDate()}/${dt.getMonth() + 1}/${dt.getFullYear()}`;\n};\n\nexport const parseDate = (date, format) => {\n  const formats = {\n    display: formatDateForDisplay,\n    database: null\n  };\n  return formats[format](date);\n};\nexport const parseCurrency = (value, param) => {\n  const formatted = value.toLocaleString('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n  });\n  return formatted;\n};\nexport const parse = ({\n  data,\n  format\n}, type) => {\n  const types = {\n    date: parseDate,\n    string: (p1, p2) => p1,\n    currency: parseCurrency\n  };\n  return types[type](data, format);\n};","map":{"version":3,"sources":["/media/skarlata/DevOps/projects/wisdon/wisdon-ui/src/helpers/parser.js"],"names":["formatDateForDisplay","date","dt","Date","getDate","getMonth","getFullYear","parseDate","format","formats","display","database","parseCurrency","value","param","formatted","toLocaleString","style","currency","parse","data","type","types","string","p1","p2"],"mappings":"AAAA,MAAMA,oBAAoB,GAAIC,IAAD,IAAU;AACnC,QAAMC,EAAE,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAX;AACA,SAAQ,GAAEC,EAAE,CAACE,OAAH,EAAa,IAAGF,EAAE,CAACG,QAAH,KAAgB,CAAE,IAAGH,EAAE,CAACI,WAAH,EAAiB,EAAhE;AACH,CAHD;;AAKA,OAAO,MAAMC,SAAS,GAAG,CAACN,IAAD,EAAOO,MAAP,KAAkB;AACvC,QAAMC,OAAO,GAAG;AACZC,IAAAA,OAAO,EAAEV,oBADG;AAEZW,IAAAA,QAAQ,EAAE;AAFE,GAAhB;AAKA,SAAOF,OAAO,CAACD,MAAD,CAAP,CAAgBP,IAAhB,CAAP;AACH,CAPM;AASP,OAAO,MAAMW,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3C,QAAMC,SAAS,GAAGF,KAAK,CAACG,cAAN,CAAqB,OAArB,EAA8B;AAAEC,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAA9B,CAAlB;AACA,SAAOH,SAAP;AACH,CAHM;AAKP,OAAO,MAAMI,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQZ,EAAAA;AAAR,CAAD,EAAmBa,IAAnB,KAA4B;AAC7C,QAAMC,KAAK,GAAG;AACVrB,IAAAA,IAAI,EAAEM,SADI;AAEVgB,IAAAA,MAAM,EAAE,CAACC,EAAD,EAAKC,EAAL,KAAYD,EAFV;AAGVN,IAAAA,QAAQ,EAAEN;AAHA,GAAd;AAMA,SAAOU,KAAK,CAACD,IAAD,CAAL,CAAYD,IAAZ,EAAkBZ,MAAlB,CAAP;AACH,CARM","sourcesContent":["const formatDateForDisplay = (date) => {\n    const dt = new Date(date);\n    return `${dt.getDate()}/${dt.getMonth() + 1}/${dt.getFullYear()}`;\n}\n\nexport const parseDate = (date, format) => {\n    const formats = {\n        display: formatDateForDisplay,\n        database: null\n    }\n\n    return formats[format](date);\n}\n\nexport const parseCurrency = (value, param) => {\n    const formatted = value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });\n    return formatted;\n}\n\nexport const parse = ({ data, format }, type) => {\n    const types = {\n        date: parseDate,\n        string: (p1, p2) => p1,\n        currency: parseCurrency\n    }\n\n    return types[type](data, format);\n}"]},"metadata":{},"sourceType":"module"}