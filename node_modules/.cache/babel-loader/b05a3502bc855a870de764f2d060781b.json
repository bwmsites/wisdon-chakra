{"ast":null,"code":"const formatDateForDisplay = date => {\n  const dt = new Date(date);\n  const options = {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\"\n  };\n  return dt.toLocaleString('pt-BR', options);\n};\n\nexport const parseDate = (date, format) => {\n  const formats = {\n    display: formatDateForDisplay,\n    database: null\n  };\n  return formats[format](date);\n};\nexport const parseCurrency = (value, param) => {\n  value = parseFloat(value);\n  const formatted = value.toLocaleString('pt-BR', {\n    style: 'currency',\n    currency: 'BRL'\n  });\n  return formatted.replace('R$', '');\n};\nexport const parse = ({\n  data,\n  format\n}, type) => {\n  const types = {\n    date: parseDate,\n    string: (p1, p2) => p1,\n    currency: parseCurrency\n  };\n  return types[type](data, format);\n};","map":{"version":3,"sources":["/media/skarlata/DevOps/projects/wisdon/wisdon-ui/src/helpers/parser.js"],"names":["formatDateForDisplay","date","dt","Date","options","year","month","day","toLocaleString","parseDate","format","formats","display","database","parseCurrency","value","param","parseFloat","formatted","style","currency","replace","parse","data","type","types","string","p1","p2"],"mappings":"AAAA,MAAMA,oBAAoB,GAAIC,IAAD,IAAU;AACnC,QAAMC,EAAE,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAX;AACA,QAAMG,OAAO,GAAG;AACZC,IAAAA,IAAI,EAAE,SADM;AAEZC,IAAAA,KAAK,EAAE,SAFK;AAGZC,IAAAA,GAAG,EAAE;AAHO,GAAhB;AAMA,SAAOL,EAAE,CAACM,cAAH,CAAkB,OAAlB,EAA2BJ,OAA3B,CAAP;AACH,CATD;;AAWA,OAAO,MAAMK,SAAS,GAAG,CAACR,IAAD,EAAOS,MAAP,KAAkB;AACvC,QAAMC,OAAO,GAAG;AACZC,IAAAA,OAAO,EAAEZ,oBADG;AAEZa,IAAAA,QAAQ,EAAE;AAFE,GAAhB;AAKA,SAAOF,OAAO,CAACD,MAAD,CAAP,CAAgBT,IAAhB,CAAP;AACH,CAPM;AASP,OAAO,MAAMa,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3CD,EAAAA,KAAK,GAAGE,UAAU,CAACF,KAAD,CAAlB;AACA,QAAMG,SAAS,GAAGH,KAAK,CAACP,cAAN,CAAqB,OAArB,EAA8B;AAAEW,IAAAA,KAAK,EAAE,UAAT;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GAA9B,CAAlB;AACA,SAAOF,SAAS,CAACG,OAAV,CAAkB,IAAlB,EAAwB,EAAxB,CAAP;AACH,CAJM;AAMP,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQb,EAAAA;AAAR,CAAD,EAAmBc,IAAnB,KAA4B;AAC7C,QAAMC,KAAK,GAAG;AACVxB,IAAAA,IAAI,EAAEQ,SADI;AAEViB,IAAAA,MAAM,EAAE,CAACC,EAAD,EAAKC,EAAL,KAAYD,EAFV;AAGVP,IAAAA,QAAQ,EAAEN;AAHA,GAAd;AAMA,SAAOW,KAAK,CAACD,IAAD,CAAL,CAAYD,IAAZ,EAAkBb,MAAlB,CAAP;AACH,CARM","sourcesContent":["const formatDateForDisplay = (date) => {\n    const dt = new Date(date);\n    const options = {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\"\n    };\n\n    return dt.toLocaleString('pt-BR', options);\n}\n\nexport const parseDate = (date, format) => {\n    const formats = {\n        display: formatDateForDisplay,\n        database: null\n    }\n\n    return formats[format](date);\n}\n\nexport const parseCurrency = (value, param) => {\n    value = parseFloat(value);\n    const formatted = value.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });\n    return formatted.replace('R$', '');\n}\n\nexport const parse = ({ data, format }, type) => {\n    const types = {\n        date: parseDate,\n        string: (p1, p2) => p1,\n        currency: parseCurrency\n    }\n\n    return types[type](data, format);\n}"]},"metadata":{},"sourceType":"module"}