{"ast":null,"code":"var _jsxFileName = \"/media/skarlata/DevOps/projects/wisdon/wisdon-ui/src/components/Table/index.js\";\nimport React from 'react';\nimport { Flex, Box, Heading, InputLeftElement, InputGroup, Icon, Input } from '@chakra-ui/core';\nimport * as parser from '../../helpers/parser';\n\nconst Table = props => {\n  const {\n    columns,\n    data,\n    title,\n    ...rest\n  } = props;\n  return /*#__PURE__*/React.createElement(Box, Object.assign({}, rest, {\n    backgroundColor: \"white\",\n    rounded: \"md\",\n    p: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Flex, {\n    mb: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    align: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    as: \"h5\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, title)), /*#__PURE__*/React.createElement(Flex, {\n    align: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputLeftElement, {\n    children: /*#__PURE__*/React.createElement(Icon, {\n      name: \"search-2\",\n      color: \"gray.300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 53\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Digite aqui o par\\xE2metro de pesquisa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Flex, {\n    borderBottom: \"1px\",\n    borderTop: \"1px\",\n    p: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, columns.map((column, ix) => /*#__PURE__*/React.createElement(Box, {\n    key: ix,\n    mr: \"10px\",\n    w: column.size ? column.size : `${Math.round(100 / columns.length)}%`,\n    cursor: \"pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    as: \"h5\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(Box, {\n    mt: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, data.map((dt, ix) => /*#__PURE__*/React.createElement(Flex, {\n    key: ix,\n    backgroundColor: ix % 2 === 0 ? 'blue.50' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, columns.map((column, ix) => /*#__PURE__*/React.createElement(Box, {\n    key: ix,\n    w: column.size ? column.size : `${Math.round(100 / columns.length)}%`,\n    py: \"5px\",\n    px: \"5px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  }, parser.parse({\n    data: dt[column.field],\n    format: 'display'\n  }, column.type)))))));\n};\n\nexport default Table;","map":{"version":3,"sources":["/media/skarlata/DevOps/projects/wisdon/wisdon-ui/src/components/Table/index.js"],"names":["React","Flex","Box","Heading","InputLeftElement","InputGroup","Icon","Input","parser","Table","props","columns","data","title","rest","map","column","ix","size","Math","round","length","label","dt","parse","field","format","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Flex, Box, Heading, InputLeftElement, InputGroup, Icon, Input } from '@chakra-ui/core';\nimport * as parser from '../../helpers/parser';\n\nconst Table = (props) => {\n    const { columns, data, title, ...rest } = props;\n\n    return (\n        <Box\n            {...rest}\n            backgroundColor=\"white\"\n            rounded=\"md\"\n            p={5}    \n        >\n           <Flex\n            mb={5}\n           >\n                <Flex align=\"flex-end\">\n                    <Heading\n                        as=\"h5\"\n                        size=\"sm\"\n                    >\n                        { title }\n                    </Heading>\n                </Flex>\n                <Flex align=\"flex-end\">\n                    <InputGroup>\n                        <InputLeftElement children={<Icon name=\"search-2\" color=\"gray.300\" />} />\n                        <Input placeholder=\"Digite aqui o parÃ¢metro de pesquisa\" />\n                    </InputGroup>\n                    </Flex>\n           </Flex>\n            <Flex\n                borderBottom=\"1px\"\n                borderTop=\"1px\"\n                p=\"5px\"\n            >\n                {\n                    columns.map((column, ix) => (\n                        <Box\n                            key={ix}\n                            mr=\"10px\"\n                            w={column.size ? column.size : `${Math.round(100/columns.length)}%`}\n                            cursor=\"pointer\"\n                        >\n                            <Heading\n                                as=\"h5\"\n                                size=\"sm\"\n                            >\n                                { column.label }\n                            </Heading>\n                        </Box>\n                    ))\n                }\n            </Flex>\n            <Box\n                mt=\"20px\"\n            >\n                {\n                    data.map((dt,ix) => (\n                        <Flex\n                            key={ix}\n                            backgroundColor={\n                                ix % 2 === 0\n                                ? 'blue.50'\n                                : null\n                            }\n                        >\n                            {\n                               columns.map((column, ix) => (\n                                    <Box\n                                        key={ix}\n                                        w={column.size ? column.size : `${Math.round(100/columns.length)}%`}\n                                        py=\"5px\"\n                                        px=\"5px\"\n                                    >\n                                       { parser.parse({data: dt[column.field], format: 'display'}, column.type) }\n                                    </Box>\n                               ))\n                            }\n                        </Flex>\n                    ))\n                }\n            </Box>\n        </Box>\n    )\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}